apiVersion: nifi.orange.com/v1alpha1
kind: NifiCluster
metadata:
  name: testnifi
spec:
  service:
    headlessEnabled: true
  zkAddress: "zk-0.zk-hs.zookeeper.svc.cluster.local:2181"
  zkPath: "/testnifi"
  clusterImage: "apache/nifi:1.12.1"
  oneNifiNodePerNode: false
  managedAdminUsers:
    - identity: "rayan@email.com"
      name: "rayan"
  nodeConfigGroups:
    default_group:
      isNode: true
      # storageConfigs:
      #   - mountPath: "/opt/nifi/nifi-current/logs"
      #     name: nifi-logs-pvc
      #     pvcSpec:
      #       accessModes:
      #         - ReadWriteOnce
      #       volumeName: "nifi-logs-pv"
      #       storageClassName: "standard"
      #       resources:
      #         requests:
      #           storage: 10Gi
      serviceAccountName: "default"
      resourcesRequirements:
        limits:
          cpu: "0.5"
          memory: 2Gi
        requests:
          cpu: "0.5"
          memory: 2Gi
  nodes:
    - id: 0
      nodeConfigGroup: "default_group"
      nodeConfig:
        storageConfigs:
          - mountPath: "/opt/nifi/nifi-current/logs"
            name: nifi-logs-pvc0
            pvcSpec:
              accessModes:
                - ReadWriteOnce
              volumeName: "nifi-logs-pv0"
              storageClassName: "standard"
              resources:
                requests:
                  storage: 10Gi
    - id: 1
      nodeConfigGroup: "default_group"
      nodeConfig:
        storageConfigs:
          - mountPath: "/opt/nifi/nifi-current/logs"
            name: nifi-logs-pvc1
            pvcSpec:
              accessModes:
                - ReadWriteOnce
              volumeName: "nifi-logs-pv1"
              storageClassName: "standard"
              resources:
                requests:
                  storage: 10Gi
  propagateLabels: true
  nifiClusterTaskSpec:
    retryDurationMinutes: 10
  readOnlyConfig:
    nifiProperties:
      webProxyHosts:
        - 34.79.208.247:8443
      overrideConfigs: |
        nifi.security.user.oidc.discovery.url=http://34.140.8.74:8080/auth/realms/master/.well-known/openid-configuration
        nifi.security.user.oidc.client.id=nifi
        nifi.security.user.oidc.client.secret=53a4ef07-8576-4797-b01b-e15e85d5952c
        nifi.security.identity.mapping.pattern.dn=CN=([^,]*)(?:, (?:O|OU)=.*)?
        nifi.security.identity.mapping.value.dn=$1
        nifi.security.identity.mapping.transform.dn=NONE
  listenersConfig:
    internalListeners:
      - type: "https"
        name: "https"
        containerPort: 8443
      - type: "cluster"
        name: "cluster"
        containerPort: 6007
      - type: "s2s"
        name: "s2s"
        containerPort: 10000
      - type: "prometheus"
        name: "prometheus"
        containerPort: 9090
    sslSecrets:
      tlsSecretName: "test-nifi"
      create: true
  externalServices:
    - name: "clusterip"
      spec:
        type: ClusterIP
        portConfigs:
          - port: 8443
            internalListenerName: "https"
      serviceAnnotations:
        toto: tata
    - name: "loadbalancer"
      spec:
        type: LoadBalancer
        portConfigs:
          - port: 8443
            internalListenerName: "https"
      serviceAnnotations:
        toto: tata
    - name: "nodepart"
      spec:
        type: NodePort
        portConfigs:
          - port: 8443
            internalListenerName: "https"
      serviceAnnotations:
        toto: tata